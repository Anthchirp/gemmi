
Maps (MRC/CCP4)
###############

Gemmi reads and writes MRC/CCP4 maps and masks in modes 0, 1, 2 and 6.
This is a format with volumetric data on a grid.
Modes 0, 1, 2 and 6 correspond C++ data types int8_t, int16_t, float and
uint16_t.
Maps usually represent electron density.
Masks are used split the volume into two parts (for example: protein and
solvent regions).

This part of the library is **not finished**.

C++
===

::

    #include <gemmi/grid.hpp>


Utilities
=========

gemmi-map
---------

(work in progress)

.. literalinclude:: map-help.txt
   :language: console


Reflection files (MTZ)
######################

(to be done)

Symmetry
########

Gemmi/symmetry provides space-group related functionality
needed in other parts of the library -- when working with coordinate
files, electron density maps and reflections.

Currently, it provides only a mapping between space group names
and symmetry operations.

Although the Gemmi project is primarily for handling macromolecular data
(for which only 65 Sohncke space groups are relevant),
just for completeness we include all 230 crystallographic space groups.

Triplets and Seitz matrices
===========================

Space groups and operations
===========================

There is more than one reasonable way to map between space group names/numbers
and symmetry operations. This is a trade-off between simplicity of the code
and the amount of tabulated information.

Well-established software libraries use various approaches:

* SgInfo_, SgLite_ and sgtbx_ (part of cctbx): deduce operations from Hall
  symbols.
  The first two are C libraries written by from Ralf W. Grosse-Kunstleve.
  They formed the foundation for the third one, which is a C++/Python project.
  For long time SgInfo and SgLite were free for non-commercial use only,
  but now they are all under the BSD license.
  They tabulate space-group numbers and names (530 entries corresponding
  to crystallographic settings from International Tables) and use ...

* csymlib (part of libccp4, license: LGPL3):
  the primary spacegroup information comes from the data file
  :file:`syminfo.lib` (540 entries).
  This is a popular file that can be found also in other projects.
  It obsoleted :file:`symop.lib`, similar data file from CCP4 but with
  less flexible format.

* spglib_ -

* CCP4 Clipper_ (crystallographic C++ library, license: LGPL2) -

* OpenBabel_ (chemical toolbox in C++, license: GPL2):
  space-group names and triplets are tabulated in :file:`space-groups.txt`
  that currently contains 541 entries.

Similar tables can be found in various programs. For example:

* Mantid_: tabulates minimal number of triplets (:file:`SpaceGroupFactory.cpp`)
  and generates the rest, based on Shmueli_, Acta Cryst. A40, 559 (1984),

* NGL_: data from CCP4 symop.lib encoded in :file:`symmetry-constants.js`,

* Fityk_: data generated by sgtbx encoded in :file:`sgtables.c`.

Hmmm, the data tables tend to differ in some corners.

.. _SgInfo: https://github.com/rwgk/sginfo
.. _SgLite: https://github.com/rwgk/sglite
.. _sgtbx: https://github.com/rwgk/sglite
.. _csymlib: http://www.ccp4.ac.uk/html/C_library/csymlib_8h.html
.. _spglib: https://atztogo.github.io/spglib/
.. _Clipper: http://www.ysbl.york.ac.uk/~cowtan/clipper/doc/
.. _OpenBabel: https://github.com/openbabel/openbabel
.. _Mantid: https://github.com/mantidproject/mantid
.. _Shmueli: http://dx.doi.org/10.1107/S0108767384001161
.. _NGL: https://github.com/arose/ngl
.. _Fityk: https://github.com/wojdyr/fityk

C++
===

::

    #include <gemmi/symmetry.hpp>

